# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ v* ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        scala: [ 2.13.10, 3.2.2 ]
        java: [ 11 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Build project
#        run: sbt --client '++${{ matrix.scala }}; test'
        run: sbt --client '++${{ matrix.scala }}; compile'

      - name: Compress target directories
        run: tar cf targets.tar transport/sttp/target test/base/target server/tapir/target standard/target target codec/argonaut/target server/finagle/target codec/upickle/target server/undertow/target backend/zio/target test/core/target core/meta/target default/target codec/circe/target backend/cats-effect/target spi/target backend/monix/target server/jetty/target core/target backend/scalaz/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v3
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        scala: [ 2.13.10, 3.2.2 ]
        java: [adopt@1.11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (3.2.2)
        uses: actions/download-artifact@v3
        with:
          name: target-${{ matrix.os }}-3.2.2-${{ matrix.java }}

      - name: Inflate target directories (3.2.2)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.10)
        uses: actions/download-artifact@v3
        with:
          name: target-${{ matrix.os }}-2.13.10-${{ matrix.java }}

      - name: Inflate target directories (2.13.10)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (3.2.2)
        uses: actions/download-artifact@v3
        with:
          name: target-${{ matrix.os }}-3.2.2-${{ matrix.java }}

      - name: Inflate target directories (3.2.2)
        run: |
          tar xf targets.tar
          rm targets.tar

      - run: sbt --client '++${{ matrix.scala }}; ci-release'
